generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String         @unique @default(uuid())
  username     String         @unique
  email        String         @unique
  passoword    String
  createdAt    DateTime       @default(now()) @map("created_at")
  updatedAt    DateTime?      @map("updated_at")
  Topic        Topic[]
  Answer       Answer[]
  Notification Notification[]
  AnswerReply  AnswerReply[]

  @@map("users")
}

model Topic {
  id        String    @unique @default(uuid())
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @map("updated_at")
  user_id   String
  content   String
  title     String
  slug      String    @unique

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  Answer Answer[]

  @@map("topics")
}

model Answer {
  id        String    @unique @default(uuid())
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @map("updated_at")
  user_id   String
  content   String
  topic_id  String

  user        User          @relation(fields: [user_id], references: [id], onDelete: Cascade)
  topic       Topic         @relation(fields: [topic_id], references: [id], onDelete: Cascade)
  AnswerReply AnswerReply[]

  @@map("answers")
}

model AnswerReply {
  id        String    @unique @default(uuid())
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @map("updated_at")
  user_id   String
  user      User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  content   String
  answer_id String

  answer Answer @relation(fields: [answer_id], references: [id], onDelete: Cascade)

  @@map("answers_replies")
}

model Notification {
  id        String    @unique @default(uuid())
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @map("updated_at")
  title     String
  content   String
  user_id   String
  readAt    DateTime? @map("read_at")

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
}
